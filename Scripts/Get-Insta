#!/usr/bin/env python
# Save an Instagram post in the current directory as pt format.
#
# Dependencies:
# - python ~ 3.5
#   - you-get ~ 0.4
#

import json, re, sys
from datetime import datetime
from you_get.common import *
from you_get.util import *

site_info = 'Instagram'

def main():
    for url in sys.argv[1:]:
        m = re.match('https?://(www\.)?instagram\.com/.*p/([^/]+)', url) or \
            re.match('https?://(www\.)?instagram\.com/.*tv/([^/]+)', url)
        assert m
        title = m.group(2)
        log.w(title)

        cont = get_content(url)
        data = re.search(r'window\._sharedData\s*=\s*(.*);</script>', cont)
        info = json.loads(data.group(1))

        date = info['entry_data']['PostPage'][0]['graphql']['shortcode_media']['taken_at_timestamp']
        post_time = datetime.fromtimestamp(date).strftime('%a %d %b %Y')
        author = info['entry_data']['PostPage'][0]['graphql']['shortcode_media']['owner']['full_name']
        try:
            text = info['entry_data']['PostPage'][0]['graphql']['shortcode_media']['edge_media_to_caption']['edges'][0]['node']['text']
        except:
            text = ''
        outf = open(title + '.pt', 'w')
        outf.write('---\n')
        outf.write('author: %s\n' % author)
        outf.write('date: %s\n' % post_time)
        outf.write('source: %s\n' % 'Instagram')
        outf.write('url: %s\n' % url)
        outf.write('---\n')
        outf.write(text)
        outf.write('\n')
        outf.close()

        v = re.search('<meta property="og:video" content="([^"]*)"', cont)
        if v is not None:
            video_url = v.group(1)
            ext = video_url.split('.')[-1]
            size = int(get_head(video_url)['Content-Length'])
            download_urls(urls=[video_url],
                          title=title,
                          ext=ext,
                          total_size=size,
                          output_dir='.')

        if 'edge_sidecar_to_children' in info['entry_data']['PostPage'][0]['graphql']['shortcode_media']:
            edges = info['entry_data']['PostPage'][0]['graphql']['shortcode_media']['edge_sidecar_to_children']['edges']
            for edge in edges:
                title = edge['node']['shortcode']
                image_url = edge['node']['display_url']
                image_url = image_url.split('?')[0]
                ext = image_url.split('.')[-1]
                try:
                    size = int(get_head(image_url)['Content-Length'])
                except:
                    image_url = image_url + '?_nc_ht=instagram.fcph1-1.fna.fbcdn.net'
                    size = int(get_head(image_url)['Content-Length'])
                download_urls(urls=[image_url],
                              title=title,
                              ext=ext,
                              total_size=size,
                              output_dir='.')
        else:
            image_url = info['entry_data']['PostPage'][0]['graphql']['shortcode_media']['display_url']
            ext = image_url.split('?')[0].split('.')[-1]
            size = int(get_head(image_url)['Content-Length'])
            download_urls(urls=[image_url],
                          title=title,
                          ext=ext,
                          total_size=size,
                          output_dir='.')

if __name__ == '__main__':
    main()
